elementclass PacketSource {
  //PollDump contains complete packets up to EtherHeader
  
  //s::PollDump("/home/justine/mfiveseven.2.pcap", BIGMEM 20000) ->
  //Strip(14) ->
  //EncapSeqNo ->
  //Random Source and InfiniteSource just generate Payloads, need to
  //Encapsulate in UDP/IP header and EtherEncap.

  //s::RandomSource(LENGTH 1200, BURST 64) ->
  s::InfiniteSource(LENGTH 1000, BURST 1) ->
  DynamicUDPIPEncap(1.0.0.1, 1234, 2.0.0.2, 1234, 1, 10) ->
  SetIPChecksum ->
  //EtherEncap(0x800, 11:22:33:44:55:66, 66:55:44:33:22:11) ->
  output;
}

//Each thread has own Discard elt and one packet source.

i0::PollDevice(p513p2, QUEUE 0, BURST 32)->rs::FTMBReliableSender->Queue(1000)->gress0::SendDevice(p513p1, QUEUE 0, BURST 32);
PollDevice(p513p1)->[1]rs;
//i1::PollDevice(p513p2, QUEUE 1, BURST 32)->Queue(1000)->egress1::SendDevice(p513p1, QUEUE 1, BURST 32);
//i2::PollDevice(p513p2, QUEUE 2, BURST 32)->Queue(1000)->egress2::SendDevice(p513p1, QUEUE 2, BURST 32);
//i3::PollDevice(p513p2, QUEUE 3, BURST 32)->Queue(1000)->egress3::SendDevice(p513p1, QUEUE 3, BURST 32);


//StaticThreadSched(i0 0, dm 1)
//StaticThreadSched(i0 0, i1 1, i2 2, i3 3, egress0 0, egress1 1, egress2 2, egress3 3)
//StaticThreadSched(i0/s 0, i1/s 1, dm 2)
